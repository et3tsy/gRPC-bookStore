// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: Book.proto

package service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ParamCode: to response with the Code
type ParamCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 1
}

func (x *ParamCode) Reset() {
	*x = ParamCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Book_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamCode) ProtoMessage() {}

func (x *ParamCode) ProtoReflect() protoreflect.Message {
	mi := &file_Book_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamCode.ProtoReflect.Descriptor instead.
func (*ParamCode) Descriptor() ([]byte, []int) {
	return file_Book_proto_rawDescGZIP(), []int{0}
}

func (x *ParamCode) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

// ParamInt: to post with an integer
type ParamInt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param int64 `protobuf:"varint,1,opt,name=param,proto3" json:"param,omitempty"` // 1
}

func (x *ParamInt) Reset() {
	*x = ParamInt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Book_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamInt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamInt) ProtoMessage() {}

func (x *ParamInt) ProtoReflect() protoreflect.Message {
	mi := &file_Book_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamInt.ProtoReflect.Descriptor instead.
func (*ParamInt) Descriptor() ([]byte, []int) {
	return file_Book_proto_rawDescGZIP(), []int{1}
}

func (x *ParamInt) GetParam() int64 {
	if x != nil {
		return x.Param
	}
	return 0
}

// ParamString: to post with a String
type ParamString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Param string `protobuf:"bytes,1,opt,name=param,proto3" json:"param,omitempty"` // 1
}

func (x *ParamString) Reset() {
	*x = ParamString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Book_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamString) ProtoMessage() {}

func (x *ParamString) ProtoReflect() protoreflect.Message {
	mi := &file_Book_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamString.ProtoReflect.Descriptor instead.
func (*ParamString) Descriptor() ([]byte, []int) {
	return file_Book_proto_rawDescGZIP(), []int{2}
}

func (x *ParamString) GetParam() string {
	if x != nil {
		return x.Param
	}
	return ""
}

// ParamBook: define the model of book
type ParamBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`              // the id
	Price     float32 `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`       // the price
	Pages     int32   `protobuf:"varint,3,opt,name=pages,proto3" json:"pages,omitempty"`        // the pages
	Title     string  `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`         // the title
	Author    string  `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`       // the author
	Publisher string  `protobuf:"bytes,6,opt,name=publisher,proto3" json:"publisher,omitempty"` // the publisher
	ISBN      string  `protobuf:"bytes,7,opt,name=ISBN,proto3" json:"ISBN,omitempty"`           // the ISBN
}

func (x *ParamBook) Reset() {
	*x = ParamBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Book_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamBook) ProtoMessage() {}

func (x *ParamBook) ProtoReflect() protoreflect.Message {
	mi := &file_Book_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamBook.ProtoReflect.Descriptor instead.
func (*ParamBook) Descriptor() ([]byte, []int) {
	return file_Book_proto_rawDescGZIP(), []int{3}
}

func (x *ParamBook) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ParamBook) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ParamBook) GetPages() int32 {
	if x != nil {
		return x.Pages
	}
	return 0
}

func (x *ParamBook) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ParamBook) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ParamBook) GetPublisher() string {
	if x != nil {
		return x.Publisher
	}
	return ""
}

func (x *ParamBook) GetISBN() string {
	if x != nil {
		return x.ISBN
	}
	return ""
}

// Book: define a list of books
type ParamBookList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookList []*ParamBook `protobuf:"bytes,1,rep,name=book_list,json=bookList,proto3" json:"book_list,omitempty"`
}

func (x *ParamBookList) Reset() {
	*x = ParamBookList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Book_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamBookList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamBookList) ProtoMessage() {}

func (x *ParamBookList) ProtoReflect() protoreflect.Message {
	mi := &file_Book_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamBookList.ProtoReflect.Descriptor instead.
func (*ParamBookList) Descriptor() ([]byte, []int) {
	return file_Book_proto_rawDescGZIP(), []int{4}
}

func (x *ParamBookList) GetBookList() []*ParamBook {
	if x != nil {
		return x.BookList
	}
	return nil
}

var File_Book_proto protoreflect.FileDescriptor

var file_Book_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x1f, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x20, 0x0a, 0x08, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x49,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x23, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xa7, 0x01,
	0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x53, 0x42, 0x4e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x49, 0x53, 0x42, 0x4e, 0x22, 0x40, 0x0a, 0x0d, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6b,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x52,
	0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xe2, 0x01, 0x0a, 0x0b, 0x42, 0x6f,
	0x6f, 0x6b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x03, 0x41, 0x64, 0x64,
	0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x42, 0x6f, 0x6f, 0x6b, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x42, 0x79, 0x49, 0x44, 0x12, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x3b, 0x0a, 0x0b,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x74, 0x1a, 0x12, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0c,
	0x5a, 0x0a, 0x2e, 0x2f, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Book_proto_rawDescOnce sync.Once
	file_Book_proto_rawDescData = file_Book_proto_rawDesc
)

func file_Book_proto_rawDescGZIP() []byte {
	file_Book_proto_rawDescOnce.Do(func() {
		file_Book_proto_rawDescData = protoimpl.X.CompressGZIP(file_Book_proto_rawDescData)
	})
	return file_Book_proto_rawDescData
}

var file_Book_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_Book_proto_goTypes = []interface{}{
	(*ParamCode)(nil),     // 0: service.ParamCode
	(*ParamInt)(nil),      // 1: service.ParamInt
	(*ParamString)(nil),   // 2: service.ParamString
	(*ParamBook)(nil),     // 3: service.ParamBook
	(*ParamBookList)(nil), // 4: service.ParamBookList
}
var file_Book_proto_depIdxs = []int32{
	3, // 0: service.ParamBookList.book_list:type_name -> service.ParamBook
	3, // 1: service.BookManager.Add:input_type -> service.ParamBook
	1, // 2: service.BookManager.QueryByID:input_type -> service.ParamInt
	2, // 3: service.BookManager.QueryByName:input_type -> service.ParamString
	1, // 4: service.BookManager.DeleteById:input_type -> service.ParamInt
	0, // 5: service.BookManager.Add:output_type -> service.ParamCode
	3, // 6: service.BookManager.QueryByID:output_type -> service.ParamBook
	4, // 7: service.BookManager.QueryByName:output_type -> service.ParamBookList
	0, // 8: service.BookManager.DeleteById:output_type -> service.ParamCode
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_Book_proto_init() }
func file_Book_proto_init() {
	if File_Book_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Book_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Book_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamInt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Book_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Book_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Book_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamBookList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Book_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Book_proto_goTypes,
		DependencyIndexes: file_Book_proto_depIdxs,
		MessageInfos:      file_Book_proto_msgTypes,
	}.Build()
	File_Book_proto = out.File
	file_Book_proto_rawDesc = nil
	file_Book_proto_goTypes = nil
	file_Book_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BookManagerClient is the client API for BookManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BookManagerClient interface {
	Add(ctx context.Context, in *ParamBook, opts ...grpc.CallOption) (*ParamCode, error)
	QueryByID(ctx context.Context, in *ParamInt, opts ...grpc.CallOption) (*ParamBook, error)
	QueryByName(ctx context.Context, in *ParamString, opts ...grpc.CallOption) (*ParamBookList, error)
	DeleteById(ctx context.Context, in *ParamInt, opts ...grpc.CallOption) (*ParamCode, error)
}

type bookManagerClient struct {
	cc grpc.ClientConnInterface
}

func NewBookManagerClient(cc grpc.ClientConnInterface) BookManagerClient {
	return &bookManagerClient{cc}
}

func (c *bookManagerClient) Add(ctx context.Context, in *ParamBook, opts ...grpc.CallOption) (*ParamCode, error) {
	out := new(ParamCode)
	err := c.cc.Invoke(ctx, "/service.BookManager/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookManagerClient) QueryByID(ctx context.Context, in *ParamInt, opts ...grpc.CallOption) (*ParamBook, error) {
	out := new(ParamBook)
	err := c.cc.Invoke(ctx, "/service.BookManager/QueryByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookManagerClient) QueryByName(ctx context.Context, in *ParamString, opts ...grpc.CallOption) (*ParamBookList, error) {
	out := new(ParamBookList)
	err := c.cc.Invoke(ctx, "/service.BookManager/QueryByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookManagerClient) DeleteById(ctx context.Context, in *ParamInt, opts ...grpc.CallOption) (*ParamCode, error) {
	out := new(ParamCode)
	err := c.cc.Invoke(ctx, "/service.BookManager/DeleteById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BookManagerServer is the server API for BookManager service.
type BookManagerServer interface {
	Add(context.Context, *ParamBook) (*ParamCode, error)
	QueryByID(context.Context, *ParamInt) (*ParamBook, error)
	QueryByName(context.Context, *ParamString) (*ParamBookList, error)
	DeleteById(context.Context, *ParamInt) (*ParamCode, error)
}

// UnimplementedBookManagerServer can be embedded to have forward compatible implementations.
type UnimplementedBookManagerServer struct {
}

func (*UnimplementedBookManagerServer) Add(context.Context, *ParamBook) (*ParamCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedBookManagerServer) QueryByID(context.Context, *ParamInt) (*ParamBook, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryByID not implemented")
}
func (*UnimplementedBookManagerServer) QueryByName(context.Context, *ParamString) (*ParamBookList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryByName not implemented")
}
func (*UnimplementedBookManagerServer) DeleteById(context.Context, *ParamInt) (*ParamCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteById not implemented")
}

func RegisterBookManagerServer(s *grpc.Server, srv BookManagerServer) {
	s.RegisterService(&_BookManager_serviceDesc, srv)
}

func _BookManager_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParamBook)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookManagerServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.BookManager/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookManagerServer).Add(ctx, req.(*ParamBook))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookManager_QueryByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParamInt)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookManagerServer).QueryByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.BookManager/QueryByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookManagerServer).QueryByID(ctx, req.(*ParamInt))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookManager_QueryByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParamString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookManagerServer).QueryByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.BookManager/QueryByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookManagerServer).QueryByName(ctx, req.(*ParamString))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookManager_DeleteById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParamInt)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookManagerServer).DeleteById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.BookManager/DeleteById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookManagerServer).DeleteById(ctx, req.(*ParamInt))
	}
	return interceptor(ctx, in, info, handler)
}

var _BookManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.BookManager",
	HandlerType: (*BookManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _BookManager_Add_Handler,
		},
		{
			MethodName: "QueryByID",
			Handler:    _BookManager_QueryByID_Handler,
		},
		{
			MethodName: "QueryByName",
			Handler:    _BookManager_QueryByName_Handler,
		},
		{
			MethodName: "DeleteById",
			Handler:    _BookManager_DeleteById_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Book.proto",
}
